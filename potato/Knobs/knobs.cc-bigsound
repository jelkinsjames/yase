#include <iostream>
#include "yase.hh"
#include "../potato_audio.hh"
#include "io.hh"

using namespace yase;

int main(int argc, char * argv[]) {

    Container synth;
    PotatoAudio audio;
    Biquad filter;
    Saw raw_saw("raw");
    AntiAlias saw(raw_saw);
    Envelope wave_envelope, filter_envelope;
    Player player;
    Gain gain;
    Transform scale( [] (double u) { return 1000 + 4000*u; }),
              invert( [] (double u) { return -u; });
    Echo echo;
    IO io;

    saw.set_input("amplitude", 0.4);
    filter.set_input("resonance", 10);
    gain.set_input("amplitude", 0.35);
    echo.set_input("duration", SAMPLE_RATE/2);
    echo.set_input("amplitude", 0.8);
    wave_envelope.set_adsr(0.8, 1.0, 0.5, 0.1);
    filter_envelope.set_adsr(2.0, 2.0, 0.0, 0.1);

    synth.path(saw, filter, echo, gain, invert)
         .connect(gain, "signal", audio, "left")
         .connect(invert, "signal", audio, "right")
         .connect(wave_envelope, "signal", saw, "amplitude")
         .connect(filter_envelope, scale)
         .connect(scale, "signal", filter, "frequency")
         .connect(io, "signal", filter, "resonance")
         .add(player);

    player.set({ G3, C4, A3, F4, F2, F1 }, [&] (double freq) {
      saw.set_input("frequency", freq);
      wave_envelope.trigger();
      filter_envelope.trigger();
    }, 3.0);

    synth.run(UNTIL_INTERRUPTED);

    return 0;


}
