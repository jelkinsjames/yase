digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node0 [id="Node000000",label="yase::EventManager",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_event_manager.html",tooltip="A class that keeps track of event listeners."];
  Node0 -> Node1 [id="edge2_Node000000_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 [id="Node000001",label="yase::Buttons",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_buttons.html",tooltip="A class for managing MIDI buttons."];
  Node0 -> Node7 [id="edge3_Node000000_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="yase::Container",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_container.html",tooltip="A module and event manager that can contain other modules."];
  Node7 -> Node8 [id="edge4_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="yase::Controls",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_controls.html",tooltip="Use a Controls object to connect MIDI knobs and faders to Module inputs."];
  Node7 -> Node9 [id="edge5_Node000007_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="yase::Echo",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_echo.html",tooltip="An echo module incorporating a fadable delay in a feedback configuration."];
  Node7 -> Node10 [id="edge6_Node000007_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="yase::FadableDelay",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_fadable_delay.html",tooltip="A time modulatable delay."];
  Node7 -> Node11 [id="edge7_Node000007_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="yase::MidiToAnalog",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_midi_to_analog.html",tooltip=" "];
  Node7 -> Node12 [id="edge8_Node000007_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="yase::Mix",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_mix.html",tooltip="A stereo mixer and Container."];
  Node2 [id="Node000002",label="yase::Module",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_module.html",tooltip="An abstract base class for modules."];
  Node2 -> Node3 [id="edge9_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="yase::AntiAlias",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_anti_alias.html",tooltip="An anti-aliasing filter."];
  Node2 -> Node4 [id="edge10_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="yase::Audio",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_audio.html",tooltip="A module wrapper for a stereo PortAudio interface (http://www.portaudio.com/)."];
  Node2 -> Node5 [id="edge11_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="yase::AutoLoad",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_auto_load.html",tooltip="A parameter auto-loader that continually reloads a *.json file."];
  Node2 -> Node6 [id="edge12_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="yase::Buffer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_buffer.html",tooltip=" "];
  Node2 -> Node1 [id="edge13_Node000002_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node7 [id="edge14_Node000002_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node13 [id="edge15_Node000002_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="yase::Delay",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_delay.html",tooltip="A pure digital delay using a doubled ended queue."];
  Node2 -> Node14 [id="edge16_Node000002_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="yase::Envelope",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_envelope.html",tooltip="An ADSR envelope."];
  Node2 -> Node15 [id="edge17_Node000002_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="yase::ExpDecay",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_exp_decay.html",tooltip="An exponentially decaying envelope."];
  Node2 -> Node16 [id="edge18_Node000002_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="yase::FFT",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_f_f_t.html",tooltip="Compute an Fast Fourier Transform."];
  Node2 -> Node17 [id="edge19_Node000002_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="yase::Fader",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_fader.html",tooltip="A Fader Module maps an input target to an output value."];
  Node2 -> Node18 [id="edge20_Node000002_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="yase::Gain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_gain.html",tooltip="Amplifies (or attenuates) its input signal to get the output signal."];
  Node2 -> Node19 [id="edge21_Node000002_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="yase::IIRFilter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_i_i_r_filter.html",tooltip="This module implements an Infinite Impulse Response (IIR) filter."];
  Node19 -> Node20 [id="edge22_Node000019_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="yase::Biquad",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_biquad.html",tooltip="Standard Biquad filters adapated from https://www.w3.org/TR/audio-eq-cookbook/."];
  Node19 -> Node21 [id="edge23_Node000019_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="yase::Resonator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_resonator.html",tooltip=" "];
  Node2 -> Node22 [id="edge24_Node000002_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="yase::Impulse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_impulse.html",tooltip="An impulse."];
  Node2 -> Node23 [id="edge25_Node000002_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="yase::LinearTransform",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_linear_transform.html",tooltip=" "];
  Node2 -> Node24 [id="edge26_Node000002_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="yase::MidiInput",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_midi_input.html",tooltip="A Midi Input manager."];
  Node2 -> Node25 [id="edge27_Node000002_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="yase::Mixer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_mixer.html",tooltip="A mixer."];
  Node2 -> Node26 [id="edge28_Node000002_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="yase::Monitor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_monitor.html",tooltip="Monitor some condition and run a function whenever it is true."];
  Node2 -> Node27 [id="edge29_Node000002_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="yase::MultiClock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_multi_clock.html",tooltip=" "];
  Node2 -> Node28 [id="edge30_Node000002_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="yase::Noop",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_noop.html",tooltip="A module that does almost nothing."];
  Node2 -> Node29 [id="edge31_Node000002_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="yase::Oscillator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_oscillator.html",tooltip="An abstract base class from which oscillators like Sine, Saw, and Triangle are derived."];
  Node29 -> Node30 [id="edge32_Node000029_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="yase::AdditiveSaw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_additive_saw.html",tooltip="A sawtooth wave oscillator."];
  Node29 -> Node31 [id="edge33_Node000029_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="yase::AdditiveSquare",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_additive_square.html",tooltip="A raw square wave oscillator."];
  Node29 -> Node32 [id="edge34_Node000029_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="yase::AdditiveTriangle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_additive_triangle.html",tooltip="A triangle wave oscillator."];
  Node29 -> Node33 [id="edge35_Node000029_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="yase::Clock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_clock.html",tooltip="A raw (aliasing) square wave alternating between -1 and 1."];
  Node29 -> Node34 [id="edge36_Node000029_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="yase::Jenny",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_jenny.html",tooltip="A Jenny oscillator."];
  Node29 -> Node35 [id="edge37_Node000029_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="yase::Noise",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_noise.html",tooltip="A noise source."];
  Node29 -> Node36 [id="edge38_Node000029_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="yase::OscGroup",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_osc_group.html",tooltip=" "];
  Node29 -> Node37 [id="edge39_Node000029_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="yase::Saw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_saw.html",tooltip="A sawtooth wave oscillator."];
  Node29 -> Node38 [id="edge40_Node000029_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="yase::Sine",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_sine.html",tooltip="A sine wave oscillator."];
  Node29 -> Node39 [id="edge41_Node000029_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="yase::Square",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_square.html",tooltip="A raw square wave oscillator."];
  Node29 -> Node40 [id="edge42_Node000029_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="yase::Triangle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_triangle.html",tooltip="A triangle wave oscillator."];
  Node29 -> Node41 [id="edge43_Node000029_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="yase::Wavetable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_wavetable.html",tooltip="A wavetable oscillator."];
  Node2 -> Node42 [id="edge44_Node000002_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="yase::Player",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_player.html",tooltip="Cycle through a list of pitches, running a callback for each one with the specified duration."];
  Node2 -> Node43 [id="edge45_Node000002_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="yase::Sample",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_sample.html",tooltip="A module that can be used to play a sample stored as a .wav file."];
  Node2 -> Node44 [id="edge46_Node000002_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="yase::SampleAndHold",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_sample_and_hold.html",tooltip=" "];
  Node2 -> Node45 [id="edge47_Node000002_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="yase::Sampler",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_sampler.html",tooltip="Record a sample."];
  Node2 -> Node46 [id="edge48_Node000002_Node000046",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="yase::Sequencer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_sequencer.html",tooltip="A general purpose sequencers."];
  Node2 -> Node47 [id="edge49_Node000002_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="yase::SimpleSequencer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_simple_sequencer.html",tooltip=" "];
  Node2 -> Node48 [id="edge50_Node000002_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="yase::Sum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_sum.html",tooltip="Summing Module."];
  Node2 -> Node49 [id="edge51_Node000002_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="yase::TappedDelay",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_tapped_delay.html",tooltip="A linearly interpolated, tappable digital delay using a circular buffer."];
  Node2 -> Node50 [id="edge52_Node000002_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="yase::Timer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_timer.html",tooltip="A timer that can be used to do something one or more times in the future."];
  Node2 -> Node51 [id="edge53_Node000002_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="yase::Transform",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classyase_1_1_transform.html",tooltip="Transform an input signal with a stateless, user-defined function."];
}
